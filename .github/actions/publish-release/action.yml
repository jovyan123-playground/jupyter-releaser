name: "Publish Release"
description: "Publish assets and finalize GitHub release"
inputs:
  token:
    description: "GitHub access token"
    required: true
  release_url:
    description: "The full url to the GitHub release page"
    required: true
  dry_run:
    description: "If set, do not push permanent changes"
    default: false
outputs:
  release_url:
    description: "The html URL of the GitHub release"
    value: ${{ steps.publish-release.outputs.release_url }}
runs:
  using: "composite"
  steps:
    - shell: bash
      id: publish-release
      run: |
        set -eux
        pip install release-helper
        export GITHUB_ACCESS_TOKEN=${{ inputs.token }}
        export DRY_RUN=${{ inputs.dry_run }}
        export TWINE_USERNAME=${TWINE_USERNAME:-"__token__"}

        if [ ${DRY_RUN} == 'true' ]; then
          export TWINE_COMMAND=${TWINE_COMMAND:-"twine upload --skip-existing"}
          export TWINE_REPOSITORY_URL=${TWINE_REPOSITORY_URL:-"https://test.pypi.org/legacy/"}
          export NPM_COMMAND=${NPM_COMMAND:-"npm publish --dry-run"}
        fi

        release-helper extract-release ${{ inputs.release_url }}
        release-helper publish-release ${{ inputs.release_url }}
